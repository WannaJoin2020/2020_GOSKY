
jdbc
 - Java에서 DB와 연동하고 쓰기위해 사용하는 API (db연동하기 위해 필수)
 - JDBC만 사용해서 DB 쿼리문을 작성하면 java소스와 쿼리소스가 겹치게 되고 관리가 어려움
 - JDBC만 사용하면 다음과 같은 코드로 작성해야한다
===============================================================
public Entity selectFAQList(UserConnection conn, Entity param) throws SQLException {
    UserStatement stmt = null;
    ResultSet rslt = null;
    StringBuffer sql = new StringBuffer();
    sql.append("\n SELECT *");
    sql.append("\n FROM");
    sql.append("\n TABLE1");
    stmt = conn.prepareStatement(sql.toString());
    rslt = stmt.executeQuery();
    Entity _DATA = new Entity();
    _DATA.put("_DATA", EntityUtil.ResultSetToClobList(rslt));
    return _DATA;
}
===============================================================
mybatis
 - jdbc없이 사용 할 수 없다. jdbc를 보완점을 개선한 것 
 - Mybatis는 SQL 쿼리문을 xml 형식의 파일로 분리시켜 저장관리할 수 있고 java소스에서 xml 태그의 id만 호출하며 개발의 편리함을 제공한다
 - Mybatis는 xml형식의 쿼리파일을 저장 및 호출하는 역할을 내부적으로 처리하는 것이다.
 - Mybatis를 사용할 경우 소스코드
===============================================================
<?xml version="1.0" encoding="UTF-8"?>
  <ENTITY id="table.getTable1List" type="SQL" return="List">
    <![CDATA[
        SELECT *
            FROM
            TABLE1
    ]]>
    <PARAMS>    
    </PARAMS>
  </ENTITY>
===============================================================